<?php

/**
 * Streaming Video Service API
 * API for managing movies and reviews in a streaming video service with authentication.
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI-Generator
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Source files are located at:
 *
 * > https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/php-laravel/
 */


namespace App\Http\Controllers;

use Illuminate\Support\Facades\Request;

class DefaultController extends Controller
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation moviesGet
     *
     * Get a list of all movies.
     *
     *
     * @return Http response
     */
    public function moviesGet()
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing moviesGet as a get method ?');
    }
    /**
     * Operation moviesPost
     *
     * Create a new movie.
     *
     *
     * @return Http response
     */
    public function moviesPost()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['movie'])) {
            throw new \InvalidArgumentException('Missing the required parameter $movie when calling moviesPost');
        }
        $movie = $input['movie'];


        return response('How about implementing moviesPost as a post method ?');
    }
    /**
     * Operation moviesMovieIdDelete
     *
     * Delete movie.
     *
     * @param int $movieId  (required)
     *
     * @return Http response
     */
    public function moviesMovieIdDelete($movieId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing moviesMovieIdDelete as a delete method ?');
    }
    /**
     * Operation moviesMovieIdGet
     *
     * Get movie by ID.
     *
     * @param int $movieId  (required)
     *
     * @return Http response
     */
    public function moviesMovieIdGet($movieId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing moviesMovieIdGet as a get method ?');
    }
    /**
     * Operation moviesMovieIdPut
     *
     * Update movie information.
     *
     * @param int $movieId  (required)
     *
     * @return Http response
     */
    public function moviesMovieIdPut($movieId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing moviesMovieIdPut as a put method ?');
    }
    /**
     * Operation reviewsGet
     *
     * Get list of reviews.
     *
     *
     * @return Http response
     */
    public function reviewsGet()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        $movieId = $input['movieId'];


        return response('How about implementing reviewsGet as a get method ?');
    }
    /**
     * Operation reviewsPost
     *
     * Create a new review.
     *
     *
     * @return Http response
     */
    public function reviewsPost()
    {
        $input = Request::all();

        //path params validation


        //not path params validation
        if (!isset($input['review'])) {
            throw new \InvalidArgumentException('Missing the required parameter $review when calling reviewsPost');
        }
        $review = $input['review'];


        return response('How about implementing reviewsPost as a post method ?');
    }
    /**
     * Operation reviewsReviewIdDelete
     *
     * Delete review.
     *
     * @param int $reviewId  (required)
     *
     * @return Http response
     */
    public function reviewsReviewIdDelete($reviewId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing reviewsReviewIdDelete as a delete method ?');
    }
    /**
     * Operation reviewsReviewIdGet
     *
     * Get review by ID.
     *
     * @param int $reviewId  (required)
     *
     * @return Http response
     */
    public function reviewsReviewIdGet($reviewId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing reviewsReviewIdGet as a get method ?');
    }
    /**
     * Operation reviewsReviewIdPut
     *
     * Update review.
     *
     * @param int $reviewId  (required)
     *
     * @return Http response
     */
    public function reviewsReviewIdPut($reviewId)
    {
        $input = Request::all();

        //path params validation


        //not path params validation

        return response('How about implementing reviewsReviewIdPut as a put method ?');
    }
}
